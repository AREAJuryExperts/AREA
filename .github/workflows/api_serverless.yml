name: Deploy to AWS lambda

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest
    env:
      CI: false
      DB_ACCESS_KEY: ${{ secrets.DB_ACCESS_KEY }}
      DB_SECRET_KEY: ${{ secrets.DB_SECRET_KEY }}
      API_PORT: ${{ secrets.API_PORT }}
      GMAIL_USER: ${{ secrets.GMAIL_USER }}
      GMAIL_PASS: ${{ secrets.GMAIL_PASS }}
      SECRET: ${{ secrets.SECRET }}
      WEB_URL: ${{ secrets.WEB_URL }}
      DISCORD_CLIENT_ID: ${{ secrets.DISCORD_CLIENT_ID }}
      DISCORD_CLIENT_SECRET: ${{ secrets.DISCORD_CLIENT_SECRET }}
      DISCORD_TOKEN: ${{ secrets.DISCORD_TOKEN }}
      TRELLO_KEY: ${{ secrets.TRELLO_KEY }}
      GITHUB_CLIENT_ID: ${{ secrets.GITHUB_CLIENT_ID }}
      GITHUB_CLIENT_SECRET: ${{ secrets.GITHUB_CLIENT_SECRET }}
      DEV: "false"
      

    steps:
    - name: Check out repository
      uses: actions/checkout@v2

    - name: install node
      uses: actions/setup-node@v2
      with:
        node-version: '14'
      
    - name: get last commit message
      run: echo "COMMIT_MESSAGE=$(git log -1 --pretty=%B | tr '\n' ' ')" >> $GITHUB_ENV
  
    - name: install serverless
      if: env.COMMIT_MESSAGE != 'AUTO COMMIT update infos.json  '
      run: npm install -g serverless

    - name: configure aws
      if: env.COMMIT_MESSAGE != 'AUTO COMMIT update infos.json  '
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ secrets.AWS_REGION }}

    - name: install dependencies
      if: env.COMMIT_MESSAGE != 'AUTO COMMIT update infos.json  '
      run: npm install --production
      working-directory: ./API
  
    - name: deploy
      if: env.COMMIT_MESSAGE != 'AUTO COMMIT update infos.json  '
      run: serverless deploy
      working-directory: ./API
