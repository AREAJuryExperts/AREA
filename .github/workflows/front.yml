name: Build and Deploy to front AWS

on:
  push:
    branches:
      - main

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    env:
      CI: false
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      AWS_REGION: 'us-east-1'
      S3_BUCKET: 'areafront'
      DISTRIBUTION_ID : "E2JMDNRDATLF7E"

    steps:
    - uses: actions/checkout@v2

    - name: install node
      uses: actions/setup-node@v2
      with:
        node-version: '14'

    - name: test infos.json
      run: |
        if ! ./checkApiUrl ; then
          echo "INFOS_CHECK=1" >> "$GITHUB_ENV"
        else
          echo "INFOS_CHECK=0" >> "$GITHUB_ENV"
        fi

    - name: debug
      run: echo env.COMMIT_CHECK

    - name: Commit changes
      if: env.INFOS_CHECK == '1'
      run: |
        mkdir -p ~/.ssh
        echo "${{ secrets.SSH_GH }}" > ~/.ssh/id_rsa
        chmod 600 ~/.ssh/id_rsa
        git config --global user.name 'AUTOMATED DEPLOYMENT'
        git config --global user.email 'email@example.com'
        git remote set-url origin git@github.com:AREAJuryExperts/AREA.git
        git add ./area_web/src/infos.json
        git commit -m "AUTO COMMIT update infos.json"
        git push

    - name: install dependecies
      if: env.COMMIT_CHECK == '0'
      run: npm install
      working-directory: ./area_web

    - name: build
      if: env.COMMIT_CHECK == '0'
      run: npm run build
      working-directory: ./area_web

    - name: deploy
      if: env.COMMIT_CHECK == '0'
      run: |
        aws s3 sync ./area_web/build s3://$S3_BUCKET --delete
      env:
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        AWS_DEFAULT_REGION: ${{ env.AWS_REGION }}

    - name: refresh cloudfront
      if: env.COMMIT_CHECK == '0'
      run: |
        aws cloudfront create-invalidation --distribution-id $DISTRIBUTION_ID --paths "/*"
      env:
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        AWS_DEFAULT_REGION: ${{ env.AWS_REGION }}

